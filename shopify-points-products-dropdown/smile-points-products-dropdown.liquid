<script src="https://js.smile.io/v1/smile-shopify.js"></script>

<!-- NOTE: Your theme may or may not come with jQuery, if not
           uncomment this script to load it on the page -->
<!-- <script
  src="https://code.jquery.com/jquery-1.12.4.min.js"
  integrity="sha256-ZosEbRLbNQzLpnKIkEdrPv7lOy9C27hHQ+Xp8a4MxAQ="
  crossorigin="anonymous"></script> -->

<script>
  (function() {
    // PointsProduct ID's that will be hidden from the dropdown
    var hidePointsProductIds = [];

    // The name used for points in your reward program.
    var pointsLabel = 'points';

    /**
     * Build up the order summary section for our points slider to live in.
     * This is built up in memory so we don't add anything to the dom until
     * all html content is populated with data from the API.
     */
    var buildPointsProductsDropdownOrderSummarySection = function(customer) {
      var customerPointsBalance = customer.points_balance;

      var sliderContainerHtml = ' \
        <div class="order-summary__section order-summary__section--smile-points-products-dropdown"> \
          <h3 class="smile-points-balance-heading">You have <span class="smile-points-balance">' + customerPointsBalance + '</span> points</h3> \
          <div class="smile-points-products-dropdown"></div> \
        </div> \
      ';
      var $sliderContainer = $($.parseHTML(sliderContainerHtml));

      return $sliderContainer;
    };

    /**
     * Automatically apply the PointsPurchase to cart.
     * This is implemented knowing the specific elements of Shopify's
     * checkout page.
     */
    var applyPointsPurchaseToCart = function(pointsPurchase) {
      var $discountCodeInput = $('#checkout_reduction_code');

      // Apply the discount code to the checkout's form input
      $discountCodeInput.val(pointsPurchase.fulfilled_reward.code);

      // Ensure the discount code form submit button is enabled
      $discountCodeInput.closest('form').find('[type=submit]').removeClass('btn--disabled').prop('disabled', false);

      // Submit the form for the discount code
      $discountCodeInput.closest('form').find('[type=submit]').click();
    };

    /**
     * The function used in the Array filter to determine if the
     * PointsProduct should be hidden.
     */
    var shouldHidePointsProduct = function(pointsProduct) {
      return hidePointsProductIds.indexOf(pointsProduct.id) === -1;
    };

    /**
     * This function is used as a way to filter out certain PointsProducts
     * from the dropdown. This is left up to the developer. Just add the
     * PointsProduct ID's you don't want to show up to the
     * hidePointsProductIds array.
     */
    var filterPointsProducts = function(pointsProducts) {
      let filteredPointsProducts = pointsProducts;

      filteredPointsProducts = filteredPointsProducts.filter(shouldHidePointsProduct);

      return filteredPointsProducts;
    };

    $(document).on('smile-ui-loaded', function() {
      SmileUI.ready().then(function(smileUI) {
        // Initialized Smile.js instance.
        var smile = smileUI.smile;

        // Don't show if there is no logged in customer
        if (!smile.customer) {
          return;
        }

        var $dropdownContainer = buildPointsProductsDropdownOrderSummarySection(smile.customer);
        var $pointsProductsDropdown = $dropdownContainer.find('.smile-points-products-dropdown');

        smile.fetchAllPointsProducts({ exchange_type: 'fixed' }).then(function(pointsProducts) {
          pointsProducts = filterPointsProducts(pointsProducts);

          let dropdownHtml = ' \
            <div class="smile-redeem-label">Redeem ' + pointsLabel + ' for rewards on this order</div> \
            <div class="fieldset"> \
              <div data-address-field="province" class="field field--required field--show-floating-label"> \
                <div class="field__input-btn-wrapper"> \
                  <div class="field__input-wrapper field__input-wrapper--select" id="pointsProductsDropdown"> \
                    <label class="field__label">Rewards</label> \
                    <select placeholder="Rewards" class="smile-points-products-select field__input field__input--select"> \
          ';

          let affordableRewards = $.grep(pointsProducts, function(pointsProduct) {
            return (pointsProduct.points_price <= smile.customer.points_balance);
          });

          let unaffordableRewards = $.grep(pointsProducts, function(pointsProduct) {
            return (pointsProduct.points_price > smile.customer.points_balance);
          });

          $.each(affordableRewards, function(index, pointsProduct) {
            let reward = pointsProduct.reward;
            dropdownHtml += '<option data-id="' + pointsProduct.id + '" value="' + reward.name + '">' + reward.name + ' • ' + pointsProduct.exchange_description + '</option>';
          });

          $.each(unaffordableRewards, function(index, pointsProduct) {
            let reward = pointsProduct.reward;
            dropdownHtml += '<option data-id="' + pointsProduct.id + '" value="' + reward.name + '" disabled>' + reward.name + ' • ' + pointsProduct.exchange_description + '</option>';
          });

          dropdownHtml += ' \
                  </select> \
                </div> \
                <button type="submit" class="smile-redeem-button field__input-btn btn btn--default"> \
                  <span class="btn__content visually-hidden-on-mobile">Redeem</span> \
                  <i class="btn__content shown-on-mobile icon icon--arrow"></i> \
                  <i class="btn__spinner icon icon--button-spinner"></i> \
                </button> \
              </div> \
              <p class="field__message field__message--error smile-points-products-dropdown-error">Something went wrong spending your points. Please try again.</p> \
            </div> \
          </div> \
          ';

          // Add slider html to the points slider container
          $pointsProductsDropdown.append(dropdownHtml);

          var $redeemButton = $pointsProductsDropdown.find('.smile-redeem-button');
          if (affordableRewards.length == 0) {
            $redeemButton.addClass('btn--disabled');
            $redeemButton.attr('disabled', true);
          }

          // Handle redeem button click events
          $pointsProductsDropdown.on('click', '.smile-redeem-button', function() {
            var $redeemButton = $(this);
            var $clonedRedeemButton = $redeemButton.clone();
            var $selectedPointsProduct = $pointsProductsDropdown.find('.smile-points-products-select :selected');
            var pointsProductId = $selectedPointsProduct.data('id');

            // Start loading indicator
            $redeemButton.addClass('btn--loading');

            // Hit the Smile.io API to spend customer's points
            smile.purchasePointsProduct(pointsProductId).then(function(pointsPurchase) {
              // Clear the field error if there was one previously
              $pointsProductsDropdown.find('.field').removeClass('field--error');

              applyPointsPurchaseToCart(pointsPurchase);

              // Immediately update the customers points balance
              $('.smile-points-balance').text(smile.customer.points_balance - pointsPurchase.points_spent);

              /**
               * Update customer's points balance based on the server's value.
               * This should be the same as the above but always nice to confirm.
               */
              smile.fetchCustomer().then(function(customer) {
                $('.smile-points-balance').text(customer.points_balance);
              });

              /**
               * Replace the PointsProducts dropdown with a message about the discount
               * being applied to the cart.
               */
               $redeemButton.replaceWith($clonedRedeemButton);
               $clonedRedeemButton.addClass('btn--disabled');
               $clonedRedeemButton.attr('disabled', true);

               $pointsProductsDropdown.find('.smile-redeem-label').text('');

               var pointsProductsDropdownHeight = $pointsProductsDropdown.find('#pointsProductsDropdown').height();
               $pointsProductsDropdown.find('#pointsProductsDropdown').replaceWith('<div id="pointsProductsDropdown">Congrats! Your reward has been applied to the cart.</div>');
               $pointsProductsDropdown.find('#pointsProductsDropdown').height(pointsProductsDropdownHeight);
            }).catch(function(err) {
              console.error('Something went wrong when purchasing PointsProduct with id ' + pointsProductId + '.');
              $pointsProductsDropdown.find('.field').addClass('field--error');
            }).then(function() {
              /**
               * This block runs whether the call succeeds or fails, kind of like finally() in other languages.
               * Source: http://stackoverflow.com/a/35999141/540194
               */

              $redeemButton.removeClass('btn--loading');
            });
          });

          /**
           * Insert the points slider order summary section above the discount code
           * section.
           */
          $('.order-summary__section--discount').before($dropdownContainer);
        }); // fetchPointsProducts
      });
    });
  }());
</script>

<style>
  .smile-points-products-dropdown {
    margin: 10px 0;
  }

  .smile-points-products-dropdown .smile-redeem-label {
    margin-bottom: 10px;
  }

  .smile-points-products-dropdown .smile-form {
    display: -webkit-flex; /* Safari */
    display: flex;
    -webkit-flex-direction: row; /* Safari */
    flex-direction: row;
  }

  .smile-points-products-dropdown .smile-form .smile-select-container {
    flex-grow: 1;
    margin-right: 15px;
    margin-bottom: 20px;
  }

  .smile-points-products-dropdown .smile-form .smile-range-input {
    margin: 20px 0;
  }

  .smile-points-products-dropdown .smile-redeem-button-container {
    flex-shrink: 1;
  }
</style>
